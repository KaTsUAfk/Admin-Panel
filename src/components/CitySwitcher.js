// src/components/CitySwitcher.js
import React from "react";
import { setCurrentCity, getCurrentCity } from "../services/api";
import { getCurrentUser } from "../services/authService"; 

const CitySwitcher = ({ onCityChange }) => {
  const currentCity = getCurrentCity();
  const user = getCurrentUser();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  let allowedCities = ["kurgan", "ekat"]; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –≤—Å–µ

  if (user) {
    if (user.username === "kurgan") {
      allowedCities = ["kurgan"];
    } else if (user.username === "ekat") {
      allowedCities = ["ekat"];
    }
  }

  // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≥–æ—Ä–æ–¥ –Ω–µ –≤ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π
  React.useEffect(() => {
    if (!allowedCities.includes(currentCity)) {
      const firstAllowed = allowedCities[0];
      setCurrentCity(firstAllowed);
      if (onCityChange) onCityChange(firstAllowed);
    }
  }, [currentCity, allowedCities, onCityChange]);

  const handleCityChange = (city) => {
    if (allowedCities.includes(city)) {
      setCurrentCity(city);
      if (onCityChange) onCityChange(city);
    }
  };

  return (
    <div
      style={{
        marginBottom: "20px",
        padding: "15px",
        color: "var(--text-primary)",
        border: "1px solid var(--border-color)",
        borderRadius: "8px",
      }}
    >
      <h3 className="sity-vibor">üåç –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞</h3>
      <div style={{ display: "flex", gap: "10px", alignItems: "center" }}>
        {allowedCities.includes("kurgan") && (
          <button
            onClick={() => handleCityChange("kurgan")}
            style={{
              padding: "8px 16px",
              backgroundColor: currentCity === "kurgan" ? "#DAB76F" : "#e0e0e0",
              color: currentCity === "kurgan" ? "#000" : "#666",
              border: "none",
              borderRadius: "4px",
              cursor: "pointer",
              fontWeight: currentCity === "kurgan" ? "bold" : "normal",
            }}
          >
            üìç –ö—É—Ä–≥–∞–Ω
          </button>
        )}

        {allowedCities.includes("ekat") && (
          <button
            onClick={() => handleCityChange("ekat")}
            style={{
              padding: "8px 16px",
              backgroundColor: currentCity === "ekat" ? "#DAB76F" : "#e0e0e0",
              color: currentCity === "ekat" ? "#000" : "#666",
              border: "none",
              borderRadius: "4px",
              cursor: "pointer",
              fontWeight: currentCity === "ekat" ? "bold" : "normal",
            }}
          >
            üèîÔ∏è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥
          </button>
        )}

        <span
          style={{
            marginLeft: "10px",
            color: "var(--text-primary)",
            fontSize: "0.9rem",
          }}
        >
          –¢–µ–∫—É—â–∏–π:{" "}
          <strong>
            {currentCity === "kurgan" ? "–ö—É—Ä–≥–∞–Ω" : "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"}
          </strong>
        </span>
      </div>
    </div>
  );
};

export default CitySwitcher;
