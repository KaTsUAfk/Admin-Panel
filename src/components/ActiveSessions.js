// src/components/ActiveSessions.js
import React, { useState, useEffect } from 'react';
import { getAuthHeaders, API_BASE } from '../services/api';
import { getCurrentUser } from '../services/authService';
import { toast } from 'react-toastify';

const ActiveSessions = () => {
  // –õ–æ–≥–∏ –≤—Ö–æ–¥–æ–≤
  const [loginSessions, setLoginSessions] = useState([]);
  // –õ–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π
  const [actionLogs, setActionLogs] = useState([]);
  const [loading, setLoading] = useState(true);
  const currentUser = getCurrentUser();
  const isAdmin = currentUser?.role === 'admin';

  // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–æ–∏—Ö —Ç–∏–ø–æ–≤ –ª–æ–≥–æ–≤
  const fetchAllLogs = async () => {
    try {
      const [loginRes, actionRes] = await Promise.all([
        fetch(`${API_BASE}/active-sessions?limit=3`, { headers: getAuthHeaders() }),
        fetch(`${API_BASE}/action-logs?limit=5`, { headers: getAuthHeaders() })
      ]);

      const loginData = await loginRes.json();
      const actionData = await actionRes.json();

      setLoginSessions(loginData.sessions || []);
      setActionLogs(actionData.logs || []);
    } catch (err) {
      toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ–≤: ' + err.message);
    } finally {
      setLoading(false);
    }
  };

  // –°–∫–∞—á–∞—Ç—å –ª–æ–≥–∏ –≤—Ö–æ–¥–æ–≤
  const handleDownloadLoginLogs = () => {
    fetch(`${API_BASE}/download-logs`, { headers: getAuthHeaders() })
      .then(response => response.blob())
      .then(blob => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'login-logs.json';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
      })
      .catch(err => {
        toast.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤ –≤—Ö–æ–¥–∞: ' + err.message);
      });
  };

  // –°–∫–∞—á–∞—Ç—å –ª–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π
  const handleDownloadActionLogs = () => {
    fetch(`${API_BASE}/download-action-logs`, { headers: getAuthHeaders() })
      .then(response => response.blob())
      .then(blob => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'action-logs.json';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
      })
      .catch(err => {
        toast.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π: ' + err.message);
      });
  };

  // –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
  const getActionLabel = (action) => {
    const labels = {
      upload_video: '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ',
      delete_video: '–£–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ',
      restart_devices: '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
      run_concat_script: '–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏',
      send_command: '–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É',
    };
    return labels[action] || action;
  };

  // –•—É–∫ useEffect –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –í–°–ï–ì–î–ê –≤—ã–∑–≤–∞–Ω, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Å–ª–æ–≤–∏–π
  useEffect(() => {
    if (isAdmin) {
      fetchAllLogs();
    }
  }, [isAdmin]); // –î–æ–±–∞–≤—å—Ç–µ isAdmin –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  if (!isAdmin) {
    return (
      <div style={{ padding: '20px', textAlign: 'center', color: 'red' }}>
        ‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
      </div>
    );
  }

  return (
    <div style={{ marginTop: '20px', marginBottom: '0px' }}>
      {/* === –õ–æ–≥–∏ –≤—Ö–æ–¥–æ–≤ === */}
      {loading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : (
        <table className="devices-table" style={{ marginBottom: '0px' }}>
          <thead>
            <tr>
              <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
              <th>IP –∞–¥—Ä–µ—Å</th>
              <th>–í—Ä–µ–º—è –≤—Ö–æ–¥–∞</th>
              <th>–ë—Ä–∞—É–∑–µ—Ä/–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</th>
            </tr>
          </thead>
          <tbody>
            {loginSessions.map((log, i) => (
              <tr key={i}>
                <td>{log.username}</td>
                <td>{log.ip}</td>
                <td>{new Date(log.timestamp).toLocaleString()}</td>
                <td style={{ fontSize: '0.8rem' }}>{log.userAgent}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
      {/* === –õ–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π === */}
      {loading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : (
        <table className="login-history-table" style={{ marginTop: '0px', marginBottom: '0px' }}>
          <thead>
            <tr>
              <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
              <th>–î–µ–π—Å—Ç–≤–∏–µ</th>
              <th>–î–µ—Ç–∞–ª–∏</th>
              <th>IP</th>
              <th>–í—Ä–µ–º—è</th>
            </tr>
          </thead>
          <tbody>
            {actionLogs.map((log, i) => (
              <tr key={i}>
                <td>{log.username || '‚Äî'}</td>
                <td>{getActionLabel(log.action)}</td>
                <td style={{ fontSize: '0.85rem' }}>
                  {log.filename && `–§–∞–π–ª: ${log.filename}`}
                  {log.deviceId && `–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${log.deviceId.substring(0, 8)}...`}
                  {log.command && `–ö–æ–º–∞–Ω–¥–∞: ${log.command}`}
                  {!log.filename && !log.deviceId && !log.command && '‚Äî'}
                </td>
                <td>{log.ip}</td>
                <td>{new Date(log.timestamp).toLocaleString()}</td>
              </tr>
            ))}
          </tbody>
        </table>)}
      <div className="global-actions-buttons">
        <button
          onClick={handleDownloadLoginLogs}
        >
          üì• –°–∫–∞—á–∞—Ç—å –ª–æ–≥–∏ –≤—Ö–æ–¥–æ–≤
        </button>
        <button
          onClick={handleDownloadActionLogs}
        >
          üì• –°–∫–∞—á–∞—Ç—å –ª–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π
        </button>
      </div>
    </div>
  );
};

export default ActiveSessions;